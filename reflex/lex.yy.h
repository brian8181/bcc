// lex.yy.h generated by reflex 5.1.0 from src/flexexample7.lxx

#ifndef REFLEX_LEX_YY_H
#define REFLEX_LEX_YY_H
#define yyIN_HEADER 1
#define REFLEX_VERSION "5.1.0"

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  OPTIONS USED                                                              //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#define REFLEX_OPTION_bison_locations     true
#define REFLEX_OPTION_flex                true
#define REFLEX_OPTION_header_file         "lex.yy.h"
#define REFLEX_OPTION_lex                 yylex
#define REFLEX_OPTION_lexer               yyFlexLexer
#define REFLEX_OPTION_noyywrap            true
#define REFLEX_OPTION_outfile             "build/lex.yy.cpp"
#define REFLEX_OPTION_prefix              yy

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  SECTION 1: %top user code                                                 //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#line 5 "src/flexexample7.lxx"

#include "flexexample7.tab.hxx"  /* Generated by bison. */


#ifdef __cplusplus

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  REGEX MATCHER                                                             //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#include <reflex/matcher.h>

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  FLEX-COMPATIBLE ABSTRACT LEXER CLASS                                      //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#include <reflex/flexlexer.h>
typedef reflex::FlexLexer<reflex::Matcher> FlexLexer;
#undef yytext
#undef yyleng
#undef yylineno

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  LEXER CLASS                                                               //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

class yyFlexLexer : public FlexLexer {
 public:
  yyFlexLexer(
      // a persistent source of input, empty by default
      const reflex::Input& input = reflex::Input(),
      // optional output stream, NULL means std::cout by default
      std::ostream *os = NULL)
    :
      FlexLexer(input, os)
  {
  }
  // bison-locations: yylloc_update() tracks lexeme locations
  virtual void yylloc_update(YYLTYPE& yylloc)
  {
    yylloc.first_line = static_cast<unsigned int>(matcher().lineno());
    yylloc.first_column = static_cast<unsigned int>(matcher().columno());
    yylloc.last_line = static_cast<unsigned int>(matcher().lineno_end());
    yylloc.last_column = static_cast<unsigned int>(matcher().columno_end());
  }
  virtual int yylex(void)
  {
    LexerError("yyFlexLexer::yylex invoked but %option bison-bridge and/or bison-locations is used");
    yyterminate();
  }
  // the flex bison-locations lexer function defined by SECTION 2
  virtual int yylex(YYSTYPE& yylval, YYLTYPE& yylloc);
};

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  BISON LOCATIONS                                                           //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

extern yyFlexLexer YY_SCANNER;

#ifndef YY_EXTERN_C
#define YY_EXTERN_C
#endif

#else // !__cplusplus

#undef YY_EXTERN_C
#define YY_EXTERN_C

#endif // __cplusplus

#ifndef yy_size_t
#define yy_size_t size_t
#endif

extern char *yytext;
extern yy_size_t yyleng;
extern int yylineno;

YY_EXTERN_C int yylex(YYSTYPE*, YYLTYPE*);

#endif
